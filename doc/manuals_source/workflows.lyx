#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{ae,aecompl}

%% $Id: workflows.lyx 1690 2021-01-22 15:21:46Z vladan $
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "cmr" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 2.5cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Workflows
\end_layout

\begin_layout Author
Vladan Lucic 
\end_layout

\begin_layout Address
\align center
Max Planck Institute of Biochemistry
\begin_inset Newline newline
\end_inset

Email: vladan@biochem.mpg.de
\end_layout

\begin_layout Standard
\align center
$Revision: 1690 $
\end_layout

\begin_layout Section
Summary
\end_layout

\begin_layout Standard
This document contains specific instructions and parameters for the hierarchical
 connectivity segmentation, segment analysis of individual experiments (datasets
) and the statistical analysis of multiple experiments.
 A more general description of concepts and procedures, as well as some
 details that are omitted here are covered in the Segmentation and the segment
 analysis guide and the Analysis of multiple datasets guide.
 
\end_layout

\begin_layout Section
Presynaptic
\end_layout

\begin_layout Subsection
Purpose
\end_layout

\begin_layout Standard
To segment and analyze complexes interlinking vesicles (connectors) and
 linking vesicles to the active zone membrane (tethers).
 Synaptic vesicles and the active zone membrane constitute boundaries.
\end_layout

\begin_layout Standard
One synapse constitutes one experiment (dataset).
 Most often there is one synapse per tomogram, but it is possible to have
 more.
 The main parts of this procedure are:
\end_layout

\begin_layout Itemize
Detection of tethers and connectors by segmentation and analysis of individual
 datasets
\end_layout

\begin_layout Itemize
Statistical analysis of multiple datasets
\end_layout

\begin_layout Subsection
Presynaptic example
\end_layout

\begin_layout Standard
An example of the complete presynaptic workflow is given in Pyto/examples/presyn
aptic_example/
\begin_inset Note Note
status open

\begin_layout Plain Layout

\end_layout

\end_inset

 directory and the steps are explained in presynaptic_example.pdf.
\end_layout

\begin_layout Subsection
File organization
\end_layout

\begin_layout Subsubsection
Segmentation and analysis of individual datasets
\end_layout

\begin_layout Itemize
Each experiment (presynapse) should have a separate directory.
 Typically, all experiment directories are located within one directory
 (for example called 'tomo')
\end_layout

\begin_layout Itemize
Individual experiment directories should have clear, meaningful names, ideally
 these should be the same as the unique experiment identifiers (see below)
 such as 'ctrl_1', 'ctrl_2', 'snc_tko_1', 'kcl_5'.
 Each of these should contain the following subdirectories:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
3d/, viz/ (or something like this): Tomograms and boundary label files 
\end_layout

\begin_layout Itemize
common/: contains tomo_info.py
\end_layout

\begin_layout Itemize
One directory for each task: regions, vesicles, layers, connectors and clusterin
g
\end_layout

\end_deeper
\begin_layout Subsubsection
Statistical analysis of multiple datasets
\end_layout

\begin_layout Itemize
Analysis directory (called 'analysis') should be next to tomo.
 It should contain the following subdirectories :
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
catalogs: catalog files, one for each tomo / synapse, their names should
 be tomo identifiers
\end_layout

\begin_layout Itemize
work: statistical analysis between experimental groups 
\end_layout

\end_deeper
\begin_layout Subsubsection
Common
\end_layout

\begin_layout Itemize
All script files used here are located in pyto/scripts directory.
 They need to be copied to their final destination and edited, as explained
 below.
\end_layout

\begin_layout Subsection
Prerequisites
\end_layout

\begin_layout Subsubsection
Tomogram 
\end_layout

\begin_layout Standard
Contains one or more biological objects of interest, should be in mrc or
 em format.
\end_layout

\begin_layout Subsubsection
Boundary label file
\end_layout

\begin_layout Standard
This is a label file that defines all labels (also called material or region).
 It is an image file with integer datatype where the positioning and size
 of exactly corresponds to the tomogram.
 It can be in mrc, em or raw format (no header, only data array).
\end_layout

\begin_layout Standard
This file has to contain distinct labels for each of the following: 
\end_layout

\begin_layout Itemize
active zone membrane 
\end_layout

\begin_layout Itemize
synaptic vesicles (each vesicle should have a unique label)
\end_layout

\begin_layout Itemize
cytoplasm (segmentation region).
 
\end_layout

\begin_layout Standard
The active zone membrane and synaptic vesicles together constitute boundaries.
\end_layout

\begin_layout Standard
The segmentation region has to make a direct contact with the boundaries,
 because the segmentation starts from the segmentation region voxels that
 directly contact the boundary.
 Also, the segmentation region should exclude the space where complexes
 of interest can not be located (because the space is occupied by another
 organelle, for example).
\end_layout

\begin_layout Standard
It is important that each vesicle has a unique label id and that no other
 voxels are labeled by the same vesicle label id.
 Other organelles and similar structures may also be labeled.
 
\end_layout

\begin_layout Subsection
Segmentation and analysis of individual datasets (synapses)
\end_layout

\begin_layout Standard
The following tasks comprise segmentation, the segment analysis and other
 types of analysis that are performed on individual datasets.
 It is recommended that they are executed in the order they are listed below.
\end_layout

\begin_layout Subsubsection
General notes
\end_layout

\begin_layout Itemize
All tasks import common parameters from tomo_info.py.
 These common parameters should not be explicitly defined in the scripts
 (but imported from tomo_info.py).
\end_layout

\begin_layout Itemize
Parameters that specify image shape, data type, byte order and array order
 do not need to be defined for images in mrc or em format because they are
 determined from their headers.
 However, if these parameters are specified in scripts, they will override
 the header values.
\end_layout

\begin_layout Itemize
Parameters that are not mentioned may be left at the default values.
 
\end_layout

\begin_layout Itemize
It is preferable that the same scripts (having the same parameters) are
 used for all datasets.
\end_layout

\begin_layout Itemize
It is important to note that pixel size is not used at all for the segmentation
 and analysis of individual datasets.
 It is introduced only in the analysis of multiple datasets.
\end_layout

\begin_layout Subsubsection
Set common parameters
\end_layout

\begin_layout Standard
In order to avoid entering same parameters in multiple scripts, the common
 parameters are entered in common/tomo_info.py.
 
\end_layout

\begin_layout Itemize

\family typewriter
image_file_name
\family default
: tomogram file name
\end_layout

\begin_layout Itemize
l
\family typewriter
abels_file_name: 
\family default
boundary label file 
\end_layout

\begin_layout Itemize

\family typewriter
labels_data_type: 
\family default
data type of the boundary label file (should be set to None for mrc and
 em formats)
\end_layout

\begin_layout Itemize

\family typewriter
all_ids: 
\family default
ids of all labels in the label file that should be considered
\end_layout

\begin_layout Itemize

\family typewriter
boundary_ids: 
\family default
ids of of all boundaries
\end_layout

\begin_layout Itemize

\family typewriter
vesicle_ids: 
\family default
ids of all vesicles
\end_layout

\begin_layout Itemize

\family typewriter
segmentation_region: 
\family default
id of the segmentation region
\end_layout

\begin_layout Subsubsection
Labeling spherical vesicles an a semi-automated way (optional)
\end_layout

\begin_layout Standard
To label spherical vesicles, it is sufficient to segment the equatorial
 planes using a manual labeling software (such as Amira).
 executing script disc_to_balls.py expands the equatorial planes (termed
 discs) to spheres (balls).
 The parameter to be set is:
\end_layout

\begin_layout Itemize

\family typewriter
discs_file_name
\family default
: discs (equatorial planes) file name
\end_layout

\begin_layout Standard
In order to avoid manually segmenting multiple equatorial planes of the
 same vesicle, it may be useful to mark the already labeled vesicles using
 the blank.py script, by repeating the following cycle until all vesicles
 are labeled (see the presynaptic example) :
\end_layout

\begin_layout Itemize
Label some equatorial planes
\end_layout

\begin_layout Itemize
Convert the labeled discs to balls (disc_to_balls.py script)
\end_layout

\begin_layout Itemize
Blank the balls (labeled vesicles) in the tomogram (blank.py script)
\end_layout

\begin_layout Subsubsection
Regions script
\end_layout

\begin_layout Standard
Execution of this scripts calculates the basic greyscale statistics and
 morphological characteristics of the structures defined in the boundary
 labels file (includes boundaries and the segmentation region).
 Strictly speaking it is not necessary, but it is recommended to run this
 script, because the results are useful to set the segmentation threshold
 range, and for troubleshooting.
 
\end_layout

\begin_layout Enumerate
Copy script pyto/scripts/regions.py to regions/regions.py.
 Typically, no parameters need to be changed from the default values.
\end_layout

\begin_layout Enumerate
Run regions/regions.py script 
\end_layout

\begin_layout Standard
Results:
\end_layout

\begin_layout Itemize
_regions.dat: human readable file containing all results
\end_layout

\begin_layout Itemize
.pkl: pickle file containing all results
\end_layout

\begin_layout Standard
It is recommended to visually inspect the results for obvious problems.
\end_layout

\begin_layout Subsubsection
Vesicles script
\end_layout

\begin_layout Standard
This script (found in pyto/scripts/vesicles.py) is used to determine basic
 greyscale, morphology and localization info for vesicles.
 Provides info similar similar to the regions script.
\end_layout

\begin_layout Enumerate
Copy script pyto/scripts/vesicles.py to vesicles/vesicles.py script
\end_layout

\begin_layout Enumerate
Set 
\family typewriter
distance_id
\family default
: typically label id of the active zone membrane
\end_layout

\begin_layout Enumerate
Set 
\family typewriter
membrane_thick
\family default
: membrane thickness in pixels, used to separate vesicle membrane from lumen
\end_layout

\begin_layout Enumerate
Check is some of the vesicles are too large or too small for synaptic vesicles
 (40 nm diameter).
 Remove those from vesicle_ids and boundary_ids (tomo_info.py)
\end_layout

\begin_layout Enumerate
Execute vesicles/vesicles.py script
\end_layout

\begin_layout Standard
The results are saved in:
\end_layout

\begin_layout Itemize
_vesicles.dat: human readable file containing all results
\end_layout

\begin_layout Itemize
_vesicles.pkl: pickle file containing results for complete vesicles (membrane
 and lumen together)
\end_layout

\begin_layout Itemize
_mem.pkl: pickle file containing results for vesicle membranes
\end_layout

\begin_layout Itemize
_lum.pkl: pickle file containing results for vesicle lumens
\end_layout

\begin_layout Standard
It is recommended to visually inspect the results for obvious problems.
\end_layout

\begin_layout Subsubsection
Layers script
\end_layout

\begin_layout Standard
Makes thin layers, that is 1 pixel thick regions parallel to the active
 zone membrane.
 The layers are made on on the cytoplasm (segmentation region) and over
 vesicles.
 More generally, they can be defined in respect to any other boundary.
 
\end_layout

\begin_layout Enumerate

\family typewriter
Copy
\family default
 pyto/scripts/layers.py to layers/layers.py
\end_layout

\begin_layout Enumerate

\family typewriter
Set boundary_id_1
\family default
 to the active zone membrane id, 
\family typewriter
boundary_id_2
\family default
 to None, 
\family typewriter
layers_mask_id
\family default
 to a list containing the active zone membrane label id
\end_layout

\begin_layout Enumerate

\family typewriter
layer_thickness = 1
\family default
 (pixel), number of layers (num_layers) should be such that all layers span
 at least 250 nm.
\end_layout

\begin_layout Enumerate

\family typewriter
num_extra_layers = 0
\family default
 and other parameters do not play any role in this case
\end_layout

\begin_layout Enumerate
Execute layers/layers.py script
\end_layout

\begin_layout Standard
The execution of this script creates the following output files:
\end_layout

\begin_layout Itemize
.dat: human readable file containing results
\end_layout

\begin_layout Itemize
.mrc: layers image file
\end_layout

\begin_layout Standard
It is recommended to visually inspect the layers image as well as the results
 for obvious problems.
\end_layout

\begin_layout Subsubsection
Connectors script
\end_layout

\begin_layout Standard
This is the main segmentation and segment analysis script (found in pyto/scripts
/connectors.py).
 The following parameters have to be defined:
\end_layout

\begin_layout Enumerate
Copy pyto/scripts/connectors.py to connectors/connectors.py
\end_layout

\begin_layout Enumerate
Threshold range (
\family typewriter
threshold
\family default
) should be chosen as follows: There should be no connectors (2-bound segments)
 at the lowest threshold.
 The highest threshold should be little lower than the highest threshold
 where connectors are formed.
 This can be adjusted by finding the lowest greyscale level where there's
 only noise (by visual inspection of your tomo and by using the segmentation
 region greyscale statistics).
 The number of threshold steps should be at least 20 (counting only those
 at which connectors are detected).
 Threshold range should be determined for each tomo, but the method to determine
 the range has to be the same for all tomos.
\end_layout

\begin_layout Enumerate
Boundary contact conditions: 
\family typewriter
n_boundary = 2
\family default
, 
\family typewriter
count_mode = 'exact'
\end_layout

\begin_layout Enumerate
Set 
\family typewriter
distance_id
\family default
: typically label id of the active zone membrane
\end_layout

\begin_layout Enumerate
The first classification (classification 1 in the script) should be used
 to obtain a proper segmentation (to cut the hierarchical tree).
 It is necessary to do this classification to obtain a proper segmentation,
 that is to eliminate overlapping segments.
 The default value (
\family typewriter
class_1_mode = 'new'
\family default
) means that the segments are detected at the lowest threshold at which
 they appear.
\end_layout

\begin_layout Enumerate
The values of other parameters can be left at the default values.
 Depending on the application, changing some might improve the results.
\end_layout

\begin_layout Enumerate
Execute connectors/connectors.py script
\end_layout

\begin_layout Standard
The execution of this script creates the following output files:
\end_layout

\begin_layout Itemize
*_thr-*.dat, *_thr-*.pkl, *_thr-*.mrc: Segmentation results in a human readable
 (.dat) and pickle (.pkl) formats, as well as the segmetnation image (.mrc)
\end_layout

\begin_layout Itemize
Files not containing 'thr' nor 'new' (.dat and .pkl): Results from segmentations
 at all thresholds together
\end_layout

\begin_layout Itemize
*_new*: Final segmentation
\end_layout

\begin_layout Standard
It is recommended to visually inspect the output segmentation images as
 well as the results (.dat) files to check for obvious problems.
\end_layout

\begin_layout Subsubsection
Further classification by the connectors script (optional)
\end_layout

\begin_layout Standard
In addition to the segmentation and analysis, the segmentation script can
 be used to classify the detected segments.
 A single run of the segmentation script can perform segmentation, analysis
 and classification, in this order (the default way).
 The following parameters need to be set:
\end_layout

\begin_layout Enumerate
The second classification (classification 2 in the segmentation script)
 separates tethers (link vesicles to the active zone membrane) and connectors
 (interconnect vesicles), 
\family typewriter
class_2_ids
\family default
 needs to be a list that contains the active zone membrane id
\end_layout

\begin_layout Enumerate
It is recommended to use classification by volume.
 However, the exact values depend on the pixel size.
 For example, the upper limit was set to 150 for 2.73 nm and to 600 for 1.37
 nm pixel size.
 
\end_layout

\begin_layout Standard
Alternatively these classifications can be done by after the initial segmentatio
n.
 In general, segmented (and possibly classified) connectors can be further
 classified by the connectors script
\end_layout

\begin_layout Enumerate
The pickle file containing the segmentation (and analysisis) needs to be
 specified (parameter 
\family typewriter
segmentation_file_name
\family default
)
\end_layout

\begin_layout Enumerate
To avoid redoing segmentation: 
\family typewriter
do_segmentation_flag = False
\family default
 and 
\family typewriter
segmentation_file_name
\family default
 is set to a segmentation pickle obtained in the previous step.
\end_layout

\begin_layout Enumerate
Classifications that were done already should not be repeated 
\end_layout

\begin_layout Enumerate
Other classification(s) can be added or commented out
\end_layout

\begin_layout Subsubsection
Clustering script (optional), defines the following clusterings
\end_layout

\begin_layout Enumerate
Connectivity-based clustering of vesicles: A vesicle cluster is defined
 as subset all vesicles that are mutually interconnected by connectors
\end_layout

\begin_layout Enumerate
Hierarchical spatial distance based clustering of vesicles.
 Various linkages and cutting methods are defined.
 These are also compared with the connectivity based clusters.
\end_layout

\begin_layout Enumerate
Hierarchical spatial distance based clustering of connectors.
 Various linkages and cutting methods are defined.
 
\end_layout

\begin_layout Subsection
Statistical analysis of multiple datasets
\end_layout

\begin_layout Subsubsection
Make catalog files
\end_layout

\begin_layout Standard
There has to be a catalog file for each experiment.
 All catalog files have to reside in the same directory (such as analysis/catalo
g/).
 
\end_layout

\begin_layout Enumerate
Chose a unique identifier for each experiment.
 For example, use the experimental condition and a number: 'wt_1', 'wt_
 2', 'protein-x_ko_1', 'untreated_1', 'compound-y_1', 'compound-y_4', ...
 .
 This can be completely unrelated to the corresponding segmentation directory.
\end_layout

\begin_layout Enumerate
Chose experimental condition (treatment) names.
 Following the identifiers given above, the names could be 'wt, 'protein-x_ko',
 'untreated', 'compound-y'.
 
\end_layout

\begin_layout Enumerate
For each experiment, copy pyto/scripts/presynaptic_catalog.py to categories/
 .
 It is recommended that the catalog file name is the identifier with .py
 suffix.
 
\end_layout

\begin_layout Enumerate
In each catalog file, set the following variables:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
identifier
\family default
: unique experiment identifier
\end_layout

\begin_layout Itemize

\family typewriter
treatment
\family default
: specifies experimental condition
\end_layout

\begin_layout Itemize
file paths of dataset specific pickles; these can be absolute or relative
 to the catalogs/ directory.
 It is strongly recommended to use the default variable names (those specified
 in pyto/scripts/presynaptic_catalog.py: 
\family typewriter
tethers_file, connectors_file, sv_file, sv_membrane_file, sv_lumen_file,
 layers_file, clusters_file.
\end_layout

\begin_layout Itemize

\family typewriter
pixel_size
\family default
: pixel size in nm
\end_layout

\begin_layout Itemize
Other properties can be added to the catalog file.
 It is strongly recommended that all catalog files pertaining to one project
 have the same variables.
\end_layout

\end_deeper
\begin_layout Enumerate
Alternatively, it might be easier to generate catalog files by a batch procedure
 (see the presynaptic example)
\end_layout

\begin_layout Standard
Note: Catalog files are used for both generation of structure specific pickles
 and for statistical analysis.
\end_layout

\begin_layout Subsubsection
Set parameters in the presynaptic analysis script (part 1/2)
\end_layout

\begin_layout Standard
In this task, the results generated by all segmentation and analysis tasks
 of all individual datasets, as well as the additional dataset-specific
 information specified in catalogs, are combined to make a set of structure-spec
ific pickles.
\end_layout

\begin_layout Enumerate
Copy pyto/scripts/presynaptic_stats.py script to the work directory (typically
 analysis/work/work.py) and set the following variables
\end_layout

\begin_layout Enumerate

\family typewriter
categories:
\family default
 names of all experimental conditions (property treatment) that should be
 considered.
\end_layout

\begin_layout Enumerate

\family typewriter
identifiers:
\family default
identifiers of all experiments (property identifier) that should be considered.
\end_layout

\begin_layout Enumerate

\family typewriter
reference
\family default
: dictionary with each key category is statistically compared with the correspon
ding value category, so all experimental groups have to be among keys and
 values are typically experimental groups like 'control', 'untreated', or
 'WT'.
\end_layout

\begin_layout Enumerate
Set 
\family typewriter
catalog_directory
\family default
 and 
\family typewriter
catalog_pattern
\family default
 variables to define the catalog files (default values are fine for the
 recommended directory organization) 
\end_layout

\begin_layout Enumerate
Names of properties (catalog variables) need to be modified only if non-default
 values were used to make catalog files.
 The variable names are 
\family typewriter
tethers_name, connectors_name, sv_name, sv_membrane_name, sv_lumen_name,
 layers_name, and clusters_name.
\end_layout

\begin_layout Enumerate
Names of the structure specific pickles generated by this task are defined
 by variables:
\family typewriter
 sv_pkl, tethers_pkl, connectors_pkl, layers_pkl and cluster_pkl.

\family default
 Usually, the default values are retained.
 
\end_layout

\begin_layout Enumerate
Other variables are not relevant for this task, so the default values should
 be kept.
 However, some of them are modified at a later point (see below)
\end_layout

\begin_layout Standard
Note: Presynaptic analysis script is used for both generation of structure
 specific pickles and for statistical analysis.
\end_layout

\begin_layout Subsubsection
Generate structure specific pickles
\end_layout

\begin_layout Standard
To generate the structure specific pickles, run presynaptic_stats.py script
 from the Python prompt (such as IPython or Jupyter notebook), in the same
 directory where the presynaptic_stats.py script is located:
\end_layout

\begin_layout LyX-Code
>>> import presynaptic_stats.py
\end_layout

\begin_layout LyX-Code
>>> presynaptic_stats.main(individual=True, save=True)
\end_layout

\begin_layout Standard
Each structure specific pickle obtained in this way contains the segment
 analysis data from all datasets.
 These pickles are specific for the following structures:
\end_layout

\begin_layout Itemize
vesicles: vesicles are defined in the boundary labels file
\end_layout

\begin_layout Itemize
tethers: subset of all segments that contact one vesicle and the active
 zone membrane
\end_layout

\begin_layout Itemize
connectors: subset of all segments that interconnect two vesicles 
\end_layout

\begin_layout Itemize
layers: regions containing cytoplasm and vesicles at specific distances
 (parallel to) the active zone membrane 
\end_layout

\begin_layout Itemize
clusters: all three clustering as defined previously
\end_layout

\begin_layout Standard
The data contained in the structure specific pickles is also preprocessed.
 That is, in addition to properties calculated by the segmentation and analysis
 of the individual datasets, other properties are also calculated.
 These include:
\end_layout

\begin_layout Itemize
properties that are in pixel units (length, various distances, surface,
 volume) are converted to nanometers
\end_layout

\begin_layout Itemize
properties that combine results from different analyses (for example, number
 of connectors per vesicle)
\end_layout

\begin_layout Itemize
some vesicles can be excluded based on their size, tethers and connectors
 contacting these vesicles are also excluded
\end_layout

\begin_layout Standard
The time needed to generate the structure specific pickles depends on the
 (individual analysis pickle) file access and transfer time.
\end_layout

\begin_layout Subsubsection
Set parameters in the presynaptic analysis script (part 2/2)
\end_layout

\begin_layout Standard
Some of the variables in the presynaptic analysis script (work.py) that were
 not modified to generate structure specific pickles (part 1), need to be
 modified to do the statistical analysis:
\end_layout

\begin_layout Enumerate

\family typewriter
reference
\family default
: This variable was already set (part 1, above), strictly speaking it is
 only needed to perform statistical analysis.
\end_layout

\begin_layout Enumerate

\family typewriter
vesicle_radius_bins
\family default
: The middle bin sets the range of radii that define synaptic vesicles.
 
\end_layout

\begin_layout Enumerate

\family typewriter
distance_bins
\family default
: Define the zones within the presynaptic terminal based on the distance
 to the active zone membrane.
 
\end_layout

\begin_layout Enumerate
Other variables in section parameters: These are convenience shortcuts,
 may be changed if needed.
\end_layout

\begin_layout Enumerate
All dict-type variables where keys are experimental group names (
\family typewriter
color, category_label,
\family default
 ...) need to be set to the current experimental groups.
\end_layout

\begin_layout Enumerate
Other variables in Printing and Plotting sections concern formatting and
 plotting of results, they can be changed if needed.
\end_layout

\begin_layout Subsubsection
Perform statistical analysis
\end_layout

\begin_layout Standard
The same presynaptic_stats.py script that was used in the previous step to
 make the structure specific pickles should be used for this step.
 The structure specific pickles are loaded and the data is further processed.
 This mainly separates vesicles and the associated connectors and tethers
 in different groups, depending on the vesicle distance to the active zone
 membrane and the existence of connectors and tethers.
 After that statistical comparison of different properties between the experimen
tal groups can be explored.
\end_layout

\begin_layout Standard
All this can be separated into the following steps:
\end_layout

\begin_layout Itemize
One may modify (remove some elements of) variables 
\family typewriter
categories
\family default
,
\family typewriter
 identifiers
\family default
 and 
\family typewriter
reference,
\family default
 as well as the printing and plotting parameters
\end_layout

\begin_layout Itemize
printing and plotting related variables are self explanatory, the default
 values are usually appropriate, except that the default categories need
 to be replaced by the actual ones 
\begin_inset Note Note
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Initialize from the Python prompt (such as IPython or Jupyter notebook):
\end_layout

\begin_layout LyX-Code
>>> import presynaptic_stats.py
\end_layout

\begin_layout LyX-Code
>>> from presynaptic_stats import *
\end_layout

\begin_layout LyX-Code
>>> presynaptic_stats.main()
\end_layout

\begin_layout Itemize
Execute predefined functions that calculate statistics between experimental
 groups and display the results.
 These are located at the end of presynaptic_stats.py script in sections
 SV distribution and below .from the same Python environment as the one used
 for the previous step
\end_layout

\begin_layout Standard
It is often convenient to use Jupyter for the previous steps, because the
 results are then saved in the Jupyter notebook and can be inspected at
 a later time without re-executing the statistical commands.
\end_layout

\begin_layout Section
Single membrane attached complexes
\begin_inset Note Note
status open

\begin_layout Plain Layout
compare w presyn
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Purpose
\end_layout

\begin_layout Standard
To segment and analyze complexes (biological material) bound to a boundary.
 
\end_layout

\begin_layout Standard
A boundary can be a lipid membrane, part of an organelle or an arbitrary
 surface created by the user.
 Generally, a boundary together with the attached complexes constitute one
 experiment (dataset), so one tomogram can contain several experiments.
 It is also possible to consider multiple boundaries and attached complexes
 as one experiment.
\end_layout

\begin_layout Standard
The main parts of this procedure are:
\end_layout

\begin_layout Itemize
Segmentation and analysis of individual datasets
\end_layout

\begin_layout Itemize
Statistical analysis of multiple datasets
\end_layout

\begin_layout Subsection
File organization
\end_layout

\begin_layout Subsubsection
Segmentation and analysis of individual datasets
\end_layout

\begin_layout Itemize
Each tomogram should have a separate directory with experiment subdirectories.
 Typically, all tomogram directories are located within one directory (for
 example called 'tomo')
\end_layout

\begin_layout Itemize
Each tomogram should have a directory where the tomogram and the boundary
 label file(s) are located ('3d', 'visualization', or similar).
 There can be one boundary file for all experiments of a tomogram, or one
 boundary file for each experiment
\end_layout

\begin_layout Itemize
Individual experiment should have clear, meaningful names (such as such
 as 'ctrl_1', 'ctrl_2', 'snc_tko_1', 'kcl_5').
 These names should be also used for the unique experiment identifiers for
 statistical analysis.
 
\end_layout

\begin_layout Itemize
Each should have the following subdirectories:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
common: contains tomo_info.py
\end_layout

\begin_layout Itemize
One directory for each task: regions, layers and connectors 
\end_layout

\end_deeper
\begin_layout Subsubsection
Statistical analysis of multiple datasets
\end_layout

\begin_layout Itemize
Statistical analysis directory (called 'analysis') should be next to tomo.
 It should contain the following subdirectories, these should be created
 after the segmentation and analysis of individual tomograms:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
catalogs: catalog files, one for each tomo / synapse, their names should
 be tomo identifiers
\end_layout

\begin_layout Itemize
work: statistical analysis between experimental groups 
\end_layout

\end_deeper
\begin_layout Subsubsection
Common
\end_layout

\begin_layout Itemize
All script files used here are located in pyto/scripts directory.
 They need to be copied to their final destination and edited, as explained
 below.
\end_layout

\begin_layout Subsection
Prerequisites
\end_layout

\begin_layout Subsubsection
Tomogram 
\end_layout

\begin_layout Standard
Contains one or more biological objects of interest, should be in mrc or
 em format.
\end_layout

\begin_layout Subsubsection
Boundary label file
\end_layout

\begin_layout Standard
This is a label file that defines all labels (also called material or region).
 It is an image file with integer datatype where the positioning and size
 of exactly corresponds to the tomogram.
 It can be in mrc, em or raw format (no header, only data array).
\end_layout

\begin_layout Standard
This file has to contain distinct labels for each of the following: 
\end_layout

\begin_layout Itemize
one or more boundaries
\end_layout

\begin_layout Itemize
region where complexes are located (segmentation region), one for each boundary
 
\end_layout

\begin_layout Standard
The segmentation region has to make a direct contact with the boundary,
 because the segmentation starts from the segmentation region voxels that
 directly contact the boundary.
 Also, the segmentation region should exclude the space where complexes
 of interest can not be located (because the space is occupied by another
 organelle, for example).
\end_layout

\begin_layout Standard
It is important that each boundary and each segmentation region have a unique
 label id and that no other voxels are labeled by the same vesicle label
 id.
 Other organelles and similar structures may also be labeled if needed for
 other purposes.
\end_layout

\begin_layout Subsection
Segmentation and analysis of individual datasets (synapses)
\end_layout

\begin_layout Subsubsection
Set common parameters
\end_layout

\begin_layout Standard
In order to avoid entering same parameters in multiple scripts, the common
 parameters are entered in common/tomo_info.py.
 
\end_layout

\begin_layout Itemize

\family typewriter
image_file_name
\family default
: tomogram file name
\end_layout

\begin_layout Itemize
l
\family typewriter
abels_file_name: 
\family default
boundary label file 
\end_layout

\begin_layout Itemize

\family typewriter
labels_data_type: 
\family default
data type of the boundary label file (should be set to None for mrc and
 em formats)
\end_layout

\begin_layout Itemize

\family typewriter
all_ids: 
\family default
ids of all labels in the label file that should be considered
\end_layout

\begin_layout Itemize

\family typewriter
boundary_ids: 
\family default
id of the boundary
\end_layout

\begin_layout Itemize

\family typewriter
vesicle_ids = []
\end_layout

\begin_layout Itemize

\family typewriter
segmentation_region: 
\family default
id of the segmentation region
\end_layout

\begin_layout Subsubsection
Regions script
\end_layout

\begin_layout Standard
This script (found in pyto/scripts/regions.py) calculates the basic greyscale
 statistics and morphological characteristics of the structures defined
 in the boundary labels file (includes boundaries and the segmentation region).
 Strictly speaking it is not necessary, but it is recommended to run this
 script, because the results are useful to set the segmentation threshold
 range, and for troubleshooting.
 
\end_layout

\begin_layout Standard
The results are saved in:
\end_layout

\begin_layout Itemize
_regions.dat: human readable file containing all results
\end_layout

\begin_layout Itemize
.pkl: pickle file containing all results
\end_layout

\begin_layout Standard
It is recommended to visually inspect the results for obvious problems.
\end_layout

\begin_layout Subsubsection
Vesicles script
\end_layout

\begin_layout Standard
Basic greyscale, morphological and localization analysis of synaptic vesicles.
 Includes separate analyses for vesicle membrane, lumen and the whole vesicles.
\end_layout

\begin_layout Subsubsection
Connectors script
\end_layout

\begin_layout Standard
This is the main segmentation and segment analysis script (found in pyto/scripts
/connectors.py).
 The following parameters have to be defined:
\end_layout

\begin_layout Enumerate
Setting the threshold range (
\family typewriter
threshold
\family default
) depends on the application, here is a procedure that might work: 
\end_layout

\begin_deeper
\begin_layout Enumerate
Initial assignment: The lowest threshold can be set so that there is no
 or just a few segments detected.
 The upper limit can be set to the value that roughly separates complexes
 of interest and the noise (empty cytoplasm) in the tomogram, using the
 results of the regions script (in particular the segmentation region greyscale
 statistics) might help.
 There should be around 20 thresholds between the lower and the upper limit.
 
\end_layout

\begin_layout Enumerate
The segmentations obtained by running the script with the initial threshold
 range should be checked at each threshold level to determine the optimal
 threshold.
\end_layout

\begin_layout Enumerate
The working threshold range should include few levels below and above the
 optimal threshold.
\end_layout

\begin_layout Enumerate
The range can be adjusted by trial and error, that is by visual inspection
 of segments detected by this script.
 It is important to chose the threshold range in the same manner for all
 tomograms.
\end_layout

\end_deeper
\begin_layout Enumerate
Boundary contact conditions: 
\family typewriter
n_boundary = 1
\family default
, 
\family typewriter
count_mode = 'exact'
\end_layout

\begin_layout Enumerate
Classification: keep classification 1, comment out all other.
 If some segments are too large, the volume classification can be imposed,
 or the upper threshold limit should be reduced.
\end_layout

\begin_layout Enumerate

\family typewriter
length_contact_mode = 'b-max'
\end_layout

\begin_layout Enumerate

\family typewriter
length_line_mode = 'straight'
\end_layout

\begin_layout Enumerate
Set 
\family typewriter
distance_id
\family default
: label id of the boundary
\end_layout

\begin_layout Standard
The values of other parameters can be left at the default values.
 Depending on the application, changing some might improve the results.
\end_layout

\begin_layout Standard
The execution of this script creates the following output files:
\end_layout

\begin_layout Itemize
*_thr-*.dat, *_thr-*.pkl, *_thr-*.mrc: Segmentation results in a human readable
 (.dat) and pickle (.pkl) formats, as well as the segmetnation image (.mrc)
\end_layout

\begin_layout Itemize
Files not containing 'thr' nor 'new' (.dat and .pkl): Results from segmentations
 at all thresholds together
\end_layout

\begin_layout Itemize
*_new*: Final segmentation
\end_layout

\begin_layout Standard
It is recommended to visually inspect the segmentation images as well as
 the results (.dat) files to check for obvious problems.
\end_layout

\begin_layout Subsubsection
Layers
\end_layout

\begin_layout Standard
Greyscale analysis of thin layers parallel to the boundary, on the segmentation
 region (optional).
\end_layout

\begin_layout Itemize
boundary_id_1:
\end_layout

\begin_layout Itemize
boundarry_id_2 = None
\end_layout

\begin_layout Itemize
num_layers: number of 1-pixel thick layers formed
\end_layout

\begin_layout Itemize
segments_file: name of the final segmentation pickle file generated by the
 connectors script.
\end_layout

\begin_layout Standard
The execution of this script creates the following output files:
\end_layout

\begin_layout Itemize
.dat: human readable file containing results
\end_layout

\begin_layout Itemize
.mrc: layers image file
\end_layout

\begin_layout Standard
It is recommended to visually inspect the layers image as well as the results
 for obvious problems.
\end_layout

\begin_layout Subsection
Statistical analysis of multiple datasets
\end_layout

\begin_layout Itemize
Like for the presynaptic workflow
\end_layout

\begin_layout Section
Troubleshooting
\end_layout

\begin_layout Itemize
Problems with boundary labels have been the most common reason for errors
 so far.
 These include incorrect creation of boundaries, such as having more than
 one vesicle labeled by the same label id, or some additional voxels being
 labeled by an id used for a vesicle.
 Entering wrong label ids in scripts also falls in this category.
\end_layout

\begin_layout Itemize
If program crashes, please check whether warning messages were generated
 at any point before the crash.
\end_layout

\end_body
\end_document
